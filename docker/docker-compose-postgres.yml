services:
  finpro-postgres:
    image: debezium/postgres:16-alpine
    container_name: ${POSTGRES_CONTAINER_NAME}
    restart: unless-stopped
    hostname: ${POSTGRES_CONTAINER_NAME}
    networks:
      - finpro-network
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_AIRFLOW_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
      - TZ=${TIMEZONE}
    volumes:
      # - ../postgres/config/postgres.config:/var/lib/postgresql/data/postgresql.conf
      - ../postgres/data:/seeding/data
      - ../postgres/ecommerce-ddl.sql:/seeding/ecommerce-ddl.sql
      - ../postgres/ingest.sql:/seeding/ingest.sql
      - ../postgres/tables-ddl.sql:/seeding/tables-ddl.sql
      # - ../postgres/script/postgres-init.sql:/docker-entrypoint-initdb.d/postgres-init.sql
    ports:
      - ${POSTGRES_PORT}:5432
    # command: ["postgres", "-c", "config_file=/var/lib/postgresql/data/postgresql.conf"]
    # entrypoint: ["/bin/bash", "/docker-entrypoint-initdb.d/init-permissions.sh"]

  adminer:
    image: adminer:4.8.1
    container_name: ${ADMINER_CONTAINER_NAME}
    hostname: ${ADMINER_CONTAINER_NAME}
    restart: always
    ports:
      - ${ADMINER_PORT}:8080
    networks:
      - finpro-network
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: ${POSTGRES_CONTAINER_NAME}
      ADMINER_DEFAULT_DB_NAME: ${POSTGRES_OLTP_DB}

networks: 
  finpro-network:
    driver: bridge
    external: true
